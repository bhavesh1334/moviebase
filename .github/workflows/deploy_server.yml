name: Deploy Server to EC2

on:
  push:
    branches:
      - main 
    paths:
      - 'server/**' 
  workflow_dispatch: 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22' # Use the Node.js version your project requires

      - name: Install dependencies and build
        working-directory: ./server
        run: |
          npm ci
          npm run build

      - name: Create deployment package
        run: |
          mkdir -p deploy
          cp -r server/dist deploy/
          cp server/package.json deploy/
          cp server/package-lock.json deploy/
          cp server/ecosystem.config.js deploy/
          echo "${{ secrets.PROD_ENV_FILE }}" > deploy/.env
          

      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "deploy/" # The folder we just created
          target: "~/moviebase-server" # A directory on your EC2 instance
          strip_components: 1

      - name: SSH into EC2, install dependencies and restart app
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd ~/moviebase-server
            npm ci --only=production
            pm2 restart ecosystem.config.js --env production
